z_trans_va01:--z_trans_va01

declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @t_carno nvarchar(20)
declare @t_bdriverno nvarchar(20)
declare @t_edriverno nvarchar(20)


set @t_bmon = case when '#non'=[3] then '' else [3] end
set @t_emon = case when '#non'=[4] then char(255) else [4] end
set @t_carno = case when '#non'=[7] then '' else [7] end
set @t_bdriverno = case when '#non'=[8] then '' else [8] end
set @t_edriverno = case when '#non'=[9] then char(255) else [9] end
---------------------------------------------------------------------------------

declare @tmp1 table( 
	gno nvarchar(1), 
	yy nvarchar(10), 
	mm nvarchar(10), 
	driverno nvarchar(20), 
	driver nvarchar(20), 
	trandate nvarchar(10), 
	carno nvarchar(50), 
	straddr nvarchar(max), 
	endaddr nvarchar(max), 
	pton2 decimal(18,3), 
	total2 float, 
	memo nvarchar(200), 
	plusmoney float,
	minusmoney float, 
	driverpay float, 
	tmoney float 
) 

insert into @tmp1
select '0','','',a.driverno,a.driver,a.trandate,a.carno,a.straddr,a.endaddr,a.pton2,a.total2,a.memo,
       case when b.plus is null then 0 else b.plus end,
       case when b.labor is null then 0 else b.labor end +
       case when b.health is null then 0 else b.health end +
       case when b.ticket is null then 0 else b.ticket end +
       case when b.minus is null then 0 else b.minus end ,
       case when b.carborr is null then 0 else b.carborr end
       ,0
from view_trans a 
left join carsals b on (SUBSTRING(a.trandate,1,6) = b.noa) and (a.driver = b.driver)
where (SUBSTRING(a.trandate,1,6) between @t_bmon and @t_emon) and (LEN(@t_carno) = 0 or a.carno = @t_carno) and (a.driverno between @t_bdriverno and @t_edriverno) and
	  (b.noa between @t_bmon and @t_emon) and (b.driverno between @t_bdriverno and @t_edriverno) 
	  
update @tmp1 set yy = SUBSTRING(trandate,1,3) 
update @tmp1 set mm = SUBSTRING(trandate,5,2) 

insert into @tmp1(gno,yy,mm,driverno,driver,total2,plusmoney,minusmoney,driverpay)
select '1',yy,mm,driverno,driver,SUM(total2),plusmoney,minusmoney,driverpay
from @tmp1 where gno = '0' group by yy,mm,driverno,driver,plusmoney,minusmoney,driverpay

update @tmp1 set tmoney = total2 + plusmoney - minusmoney - driverpay where gno = '1'

select gno,yy,mm,driverno,driver,trandate,carno,straddr,endaddr,pton2,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total2),1)),4,15)) total2, 
	   memo, 
       reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,plusmoney),1)),4,15)) plusmoney,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,minusmoney),1)),4,15)) minusmoney,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,driverpay),1)),4,15)) driverpay,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tmoney),1)),4,15)) tmoney
from @tmp1 order by driverno,yy,mm,gno,trandate  ;



--******************************************************************************
z_trans_va02:--z_trans_va02

declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @t_bdriverno nvarchar(20)
declare @t_edriverno nvarchar(20)

set @t_bmon = case when '#non'=[3] then '' else [3] end
set @t_emon = case when '#non'=[4] then char(255) else [4] end
set @t_bdriverno = case when '#non'=[8] then '' else [8] end
set @t_edriverno = case when '#non'=[9] then char(255) else [9] end

---------------------------------------------------------------------------------

declare @tmp1 table(
	gno nvarchar(1),
	trandate nvarchar(10),
	carno nvarchar(max),
	ranking nvarchar(10),
	driver nvarchar(20),
	tranmoney float,
	drivermoney float
--	memo nvarchar(max)
)


insert into @tmp1
select '9',SUBSTRING(a.trandate,1,6),a.carno,'',a.driver,a.total,a.total2 --,a.memo
from view_trans a
where (SUBSTRING(a.trandate,1,6) between @t_bmon and @t_emon) and (a.driverno between @t_bdriverno and @t_edriverno)
order by a.trandate,a.driverno

insert into @tmp1(gno,trandate,driver,tranmoney,drivermoney)
select '8',trandate,driver,SUM(tranmoney),SUM(drivermoney)
from @tmp1 where gno = '9' group by trandate,driver

insert into @tmp1(gno,trandate,ranking,driver,tranmoney,drivermoney)
select '0',trandate,DENSE_RANK() OVER(PARTITION BY trandate ORDER BY tranmoney DESC),driver,tranmoney,drivermoney
from @tmp1 where gno = '8' 
 
delete @tmp1 where gno = '8'

insert into @tmp1(gno,trandate,driver,carno,tranmoney,drivermoney)
select '1',trandate,driver,carno,SUM(tranmoney),SUM(drivermoney)
from @tmp1 where gno = '9' group by trandate,driver,carno

insert into @tmp1(gno,trandate,tranmoney,drivermoney)
select '2',trandate,SUM(tranmoney),SUM(drivermoney)
from @tmp1 where gno = '1' group by trandate

insert into @tmp1(gno,trandate,carno,tranmoney)
select '3' ,trandate,COUNT(*),SUM(tranmoney)
from @tmp1 where gno = '1' group by trandate

delete @tmp1 where gno = '9'


declare @trandate nvarchar(20)
declare @carno nvarchar(20)
declare @xdriver nvarchar(20)
declare @driver nvarchar(20)
declare @str nvarchar(max)
declare @recno int

set @xdriver = 'xxx'
set @str = ''

declare cursor_table cursor for 
select trandate,carno,driver from @tmp1 where gno = '1'
open cursor_table 
fetch next from cursor_table 
into @trandate,@carno,@driver
while(@@FETCH_STATUS <> -1) 
begin  
	 
	if(@driver != @xdriver)
	begin
		set @recno = (select COUNT(*) from @tmp1 where gno = '1' and driver = @driver and trandate = @trandate)
		set @str = @carno
		set @recno = @recno -1
		set @xdriver = @driver
	end
	else if((@driver = @xdriver) and (@recno > 0))
	begin
		set @str = @str + '.' + @carno
		set @recno = @recno -1
		set @xdriver = @driver
	end
	
	if(@recno = 0)
	begin
		update @tmp1 set carno = @str where gno = '0' and driver = @xdriver and trandate = @trandate
	end

	fetch next from cursor_table 
	into @trandate,@carno,@driver
end 
close cursor_table 
deallocate cursor_table 

declare @ranking nvarchar(10)
declare @i int
declare @cnt int

declare cursor_table cursor for 
select trandate,ranking,driver from @tmp1 where gno = '0'
open cursor_table 
fetch next from cursor_table 
into @trandate,@ranking,@driver
while(@@FETCH_STATUS <> -1) 
begin
	set @i = 0
	set @cnt =(select COUNT(*) from @tmp1 where gno = '1' and driver = @driver and trandate = @trandate)
	
	while(@i < @cnt)
	begin
		update @tmp1 set ranking = @ranking where gno = '1' and driver = @driver and trandate = @trandate
		set @i = @i + 1
	end
	
	fetch next from cursor_table 
	into @trandate,@ranking,@driver
end 
close cursor_table 
deallocate cursor_table

update @tmp1 set trandate = SUBSTRING(trandate,1,3) + '.' + SUBSTRING(trandate,5,2) 
update @tmp1 set tranmoney = CEILING(tranmoney / carno) where gno = '3'
update @tmp1 set ranking = 'zzzzz' where gno = '2' or gno = '3' 

select * from @tmp1 order by trandate,ranking,gno  ;



--******************************************************************************
z_trans_va03:--z_trans_va03

declare @t_bmon nvarchar(10)
declare @t_emon nvarchar(10)
declare @t_bdriverno nvarchar(20)
declare @t_edriverno nvarchar(20)

set @t_bmon = case when '#non'=[3] then '' else [3] end
set @t_emon = case when '#non'=[4] then char(255) else [4] end
set @t_bdriverno = case when '#non'=[8] then '' else [8] end
set @t_edriverno = case when '#non'=[9] then char(255) else [9] end

---------------------------------------------------------------------------------



--******************************************************************************
z_trans_va04:--z_trans_va04

declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bdriverno nvarchar(20)
declare @t_edriverno nvarchar(20)

set @t_bdate = case when '#non'=[5] then '' else [5] end
set @t_edate = case when '#non'=[6] then char(255) else [6] end
set @t_bdriverno = case when '#non'=[8] then '' else [8] end
set @t_edriverno = case when '#non'=[9] then char(255) else [9] end

---------------------------------------------------------------------------------

declare @tmp1 table(
	gno nvarchar(1),
	datea nvarchar(10),
	carno nvarchar(20),
	driverno nvarchar(20),
	driver nvarchar(20),
	bdate nvarchar(10),
	edate nvarchar(10)
)

insert into @tmp1 
select '0',SUBSTRING(datea,1,6),carno,driverno,driver,bdate,edate
from view_tre
where (datea between @t_bdate and @t_edate) and (driverno between @t_bdriverno and @t_edriverno)

insert into @tmp1 (gno,datea,carno,driverno,driver,bdate,edate)
select '1',datea,carno,driverno,driver,min(bdate),max(edate)
from @tmp1 where gno = '0' group by gno,datea,carno,driverno,driver

delete @tmp1 where gno = '0'


declare @tmp2 table(
	gno nvarchar(1),
	mon nvarchar(10),
	driverno nvarchar(20),
	driver nvarchar(20),
	tel nvarchar(20),
	trandate nvarchar(10),
	carno nvarchar(20),
	product nvarchar(40),
--  工程案號	
	straddr nvarchar(50),
	endaddr nvarchar(50),
--  重量/台
	price float,	
	money float,
	memo nvarchar(200)
)

declare @datea  nvarchar(10)
declare @carno nvarchar(20)
declare @driverno nvarchar(20)
declare @bdate nvarchar(10)
declare @edate nvarchar(10)

declare cursor_table cursor for 
select datea,carno,driverno,bdate,edate from @tmp1 where gno = '1'
open cursor_table 
fetch next from cursor_table 
into @datea,@carno,@driverno,@bdate,@edate
while(@@FETCH_STATUS <> -1) 
begin

	insert into @tmp2
	select '0','',a.noa,a.namea,
	case when LEN(a.tel) = 0 then a.mobile else a.tel end,
	b.trandate,'',b.product,b.straddr,b.endaddr,b.price,b.money,b.memo
	from driver a
	left join view_tres b on a.noa = b.driverno
	where(b.trandate between @bdate and @edate) and (b.driverno = @driverno)
	
	update @tmp2 set mon = @datea where (trandate between @bdate and @edate) and (driverno = @driverno)
	update @tmp2 set carno = @carno where (trandate between @bdate and @edate) and (driverno = @driverno)
		  
	fetch next from cursor_table 
	into @datea,@carno,@driverno,@bdate,@edate
end 
close cursor_table 
deallocate cursor_table

insert into @tmp2(gno,mon,driverno,driver,money)
select '1',mon,driverno,driver,SUM(money)
from @tmp2 where gno ='0' group by gno,mon,driverno,driver

update @tmp2 set trandate = 'zzzzzzzzz' where gno = '1'

select gno,SUBSTRING(mon,5,2) mon,driverno,driver,tel,trandate,carno,product,straddr,endaddr,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,15)) price,
	   reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,15)) money,
	   memo 		
from @tmp2 order by mon,driverno,trandate,gno  ;
